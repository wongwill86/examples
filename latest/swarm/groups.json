{{/*

Infrakit Groups Config

This is a template JSON for managing two groups of instances - managers and workers - on AWS.
To keep things simple, we use the metadata api on AWS to determine subnets and vpc ids.

This is to support the use case where infrakit is running *inside* the cloud environment where
the instances it manages reside.

 */}}

{{ source "common.ikt" }} {{/* a common template included here to define global variables */}}

{{/* Local variables */}}
{{ $swarmLeaderIP := var `/cluster/swarm/join/ip` }}
{{ $managerIP0 := var `/cluster/swarm/manager/ips/0` }}
{{ $managerIP1 := var `/cluster/swarm/manager/ips/1` }}
{{ $managerIP2 := var `/cluster/swarm/manager/ips/2` }}
{{ $managerIP3 := var `/cluster/swarm/manager/ips/3` }}
{{ $managerIP4 := var `/cluster/swarm/manager/ips/4` }}

{{ $prov := (var `/cluster/provider`) }}
{{ $managerSize := int (var `/cluster/size/manager`) }}
{{ $workerSize := int (var `/cluster/size/worker`) }}
{{ $dockerEngine := `unix:///var/run/docker.sock` }} {{/* for this flavor to connect to */}}

{{ $managerInit := cat (var `/infrakit/config/root`) `/manager-init.sh` | nospace }}
{{ $workerInit := cat (var `/infrakit/config/root`) `/worker-init.sh` | nospace }}

{{ $myGroups := include (cat (var `/cluster/provider`) `/groups.json` | nospace) | jsonDecode }}

[
    {
        "Plugin": "group",
        "Properties": {
            "ID": "managers-{{ var `/cluster/name` }}",
            "Properties": {
                "Allocation": {
                    "LogicalIDs": [
                            "{{ $managerIP0 }}"

                            {{ if gt $managerSize 1 }}
                            ,"{{ $managerIP1 }}"
                            {{ end }}
                            {{ if gt $managerSize 2 }}
                            ,"{{ $managerIP2 }}"
                            {{ end }}
                            {{ if gt $managerSize 3 }}
                            ,"{{ $managerIP3 }}"
                            {{ end }}
                            {{ if gt $managerSize 4 }}
                            ,"{{ $managerIP4 }}"
                            {{ end }}
                    ]
                },
                "Flavor": {
                    "Plugin": "swarm/manager",
                    "Properties": {
                        "Attachments" : {
                            "{{ $managerIP0 }}": [
                              { "ID": "{{ $managerIP0 }}", "Type": "ebs" }
                            ]
                            {{ if gt $managerSize 1 }}
                            ,"{{ $managerIP1 }}": [
                              { "ID": "{{ $managerIP1 }}", "Type": "ebs" }
                            ]
                            {{ end }}
                            {{ if gt $managerSize 2 }}
                            ,"{{ $managerIP2 }}": [
                              { "ID": "{{ $managerIP2 }}", "Type": "ebs" }
                            ]
                            {{ end }}
                            {{ if gt $managerSize 3 }}
                            ,"{{ $managerIP3 }}": [
                              { "ID": "{{ $managerIP3 }}", "Type": "ebs" }
                            ]
                            {{ end }}
                            {{ if gt $managerSize 4 }}
                            ,"{{ $managerIP4 }}": [
                              { "ID": "{{ $managerIP4 }}", "Type": "ebs" }
                            ]
                            {{ end }}
                        },
                        "InitScriptTemplateURL": "{{ $managerInit }}",
                        "SwarmJoinIP": "{{ $swarmLeaderIP }}",
                        "Docker" : {
                            "Host" : "{{ $dockerEngine }}"
                        }
                    }
                },
                "Instance": {{ $myGroups.Managers | jsonEncode }}
            }
        }
    }
    ,
    {
        "Plugin": "group",
        "Properties": {
            "ID": "workers-{{ var `/cluster/name` }}-worker",
            "Properties": {
                "Allocation": {
                    "Size": {{ $workerSize }}
                },
                "Flavor": {
                    "Plugin": "swarm/worker",
                    "Properties": {
                        "InitScriptTemplateURL": "{{ $workerInit }}",
                        "SwarmJoinIP": "{{ $swarmLeaderIP }}",
                        "Docker" : {
                            "Host" : "{{ $dockerEngine }}"
                        }
                    }
                },
                "Instance": {{ $myGroups.Workers | jsonEncode }}
            }
        }
    }
]
